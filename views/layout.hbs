<!DOCTYPE html>
<html>

<head>
	<title>{{title}}</title>
	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.3/css/bootstrap.min.css">
	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.3/css/bootstrap-theme.min.css">
	<script src="https://code.jquery.com/jquery-3.2.1.js" integrity="sha256-DZAnKJ/6XZ9si04Hgrsxu/8s717jcIzLy3oi35EouyE=" crossorigin="anonymous">
	</script>
	<link href="/stylesheets/style.css" type="text/css" rel="stylesheet">
	<script src="//netdna.bootstrapcdn.com/bootstrap/3.0.3/js/bootstrap.min.js"></script>
	<script src="/javascripts/web3.js"></script>
</head>

<body>

	<div class="row">

		<div class="col-xs-2">
			<nav>
				<div class="row">
					<div class="col-xs-12">
						<button type="button" class="btn btn-info">
							<a href="/buyer/register">Register as Buyer</a>
						</button>
						
					</div>

					<div class="col-xs-12">
						<br>
						<button type="button" class="btn btn-info">
							<a href="/seller/register">Register as Seller</a>
						</button>
						
					</div>

					<div class="col-xs-12">
						<br>
						<button type="button" class="btn btn-info">
							<a href="/buyer/register">......</a>
						</button>
						
					</div>
				</div>
			</nav>
		</div>

		<div class="col-xs-8">
			<div class="">

				<div class="row">

					<div class="error-msg msg hide-me" class="col-xs-12"></div>
					<div class="success-msg msg hide-me" class="col-xs-12"></div>

				</div>

				{{{body}}}
			</div>
		</div>

	</div>

</body>

<script>
	let contract = {};
	const contractAddress = '0xf25186b5081ff5ce73482ad761db0eb0d25abfbf';
	const creator = '0x627306090abab3a6e1400e9345bc60c78a8bef57';

	//let web3 = {};
	window.addEventListener('load', function () {

		const contractAbi = [{
				"constant": true,
				"inputs": [],
				"name": "getBalanceOfSeller",
				"outputs": [{
					"name": "",
					"type": "uint256"
				}],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getBalance",
				"outputs": [{
					"name": "",
					"type": "uint256"
				}],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getFee",
				"outputs": [{
					"name": "",
					"type": "uint256"
				}],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [{
					"name": "productName",
					"type": "string"
				}],
				"name": "getProductPriceInFinney",
				"outputs": [{
					"name": "",
					"type": "uint256"
				}],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [{
					"name": "index",
					"type": "uint256"
				}],
				"name": "getProduct",
				"outputs": [{
						"name": "",
						"type": "uint256"
					},
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getNumberOfProducts",
				"outputs": [{
					"name": "",
					"type": "uint256"
				}],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"anonymous": false,
				"inputs": [{
						"indexed": false,
						"name": "addr",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "currentTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "price",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "productName",
						"type": "string"
					}
				],
				"name": "BuyProduct",
				"type": "event"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "sellerWithdraw",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"anonymous": false,
				"inputs": [{
						"indexed": false,
						"name": "addr",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "_registerTax",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "currentTime",
						"type": "uint256"
					}
				],
				"name": "RegisterEvent",
				"type": "event"
			},
			{
				"constant": false,
				"inputs": [{
						"name": "price",
						"type": "uint256"
					},
					{
						"name": "productName",
						"type": "string"
					},
					{
						"name": "doc",
						"type": "string"
					},
					{
						"name": "ipfsPath",
						"type": "string"
					}
				],
				"name": "addProduct",
				"outputs": [{
					"name": "",
					"type": "bool"
				}],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [{
					"name": "productName",
					"type": "string"
				}],
				"name": "buyProduct",
				"outputs": [{
						"name": "",
						"type": "uint256"
					},
					{
						"name": "",
						"type": "string"
					},
					{
						"name": "",
						"type": "string"
					},
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [{
						"name": "_registerTax",
						"type": "uint256"
					},
					{
						"name": "_fee",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"payable": true,
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "registerAsBuyer",
				"outputs": [],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "registerAsSeller",
				"outputs": [],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "ownerWithdraw",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		];

		//var web3 = {};
		//if (typeof window.web3 !== "undefined" && typeof window.web3.currentProvider !== "undefined") {
		//	web3 = new Web3(new Web3.providers.HttpProvider("https://ropsten.infura.io/ri45PYMaMiRFCfZh2H5a"));
		//} else {
		//	web3 = new Web3(new Web3.providers.HttpProvider("https://ropsten.infura.io/ri45PYMaMiRFCfZh2H5a"));
		//}
		if (typeof web3 !== 'undefined') {
			//console.log(web3.currentProvider);
			//App.web3Provider = web3.currentProvider;
			web3 = new Web3(web3.currentProvider);
		} else if (typeof window.web3 !== "undefined" && typeof window.web3.currentProvider !== "undefined") {
			//web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:7545"));
			//App.web3Provider = web3.currentProvider;
			web3 = new Web3(web3.currentProvider);
		} else {
			web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:7545"));
		}

		//web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:7545"));
		contract = web3.eth.contract(contractAbi).at(contractAddress);

		$('#btn-buyer-register').click(buyerRegister);

		function buyerRegister(){
			let userAddress = $('#userAddress').val();

			if(userAddress.indexOf('0x') !== 0){
				showErrorMsg('Invalid address!');
				return;
			}

			if(userAddress.length !== 42){
				showErrorMsg('Invalid address length!');
				return;
			}

			//register as buyer
			let options = {
				from: userAddress, 
				value: '1000000000000000000', 
				gas: 1000000
			};

			contract.registerAsBuyer(options, function(err,result){
				if(err){
					showErrorMsg(err);
					return;
				}

				console.log(result); // tx hash
				let msg = `Successfully register! Transaction hash: ${result}`;
				showSuccessMsg(msg);
				});
			};

		
		
		//utis
		$('.msg').click(onMsgClick);
		function onMsgClick(){
			$(this).hide();
		}

		function showSuccessMsg(text) {
			$('.success-msg').text(text);
			$('.success-msg').removeClass('hide-me');
			$('.success-msg').show();
		}

		function showErrorMsg(text) {
			$('.error-msg').text(text);
			$('.error-msg').removeClass('hide-me');
			$('.error-msg').show();
		}
	})
</script>

</html>